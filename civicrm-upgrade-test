#!/bin/bash

## Determine the absolute path to a directory or file
function abspath {
    if [[ -d "$1" ]]
    then
        pushd "$1" >/dev/null
        pwd
        popd >/dev/null
    elif [[ -e $1 ]]
    then
        pushd "$(dirname "$1")" >/dev/null
        echo "$(pwd)/$(basename "$1")"
        popd >/dev/null
    else
        echo "$1" does not exist! >&2
        return 127
    fi
}

function showHelp {
      echo "usage: $0 [--out /path/to/output/dir] [--web /path/to/web/root] [--db mysql_database_name] <file1.sql.bz2> <file2.sql.bz2> ..."
}

#####################################################################
## Load options

SCRIPT_PATH=$(abspath "$0")
SCRIPT_DIR=$(dirname "$SCRIPT_PATH")
if [ -f "$SCRIPT_DIR/civicrm-upgrade-test.settings" ]; then 
  source "$SCRIPT_DIR/civicrm-upgrade-test.settings"
else
  echo "Warning: Could not find $SCRIPT_DIR/civicrm-upgrade-test.settings"
fi

DATABASE_FILES=""
while [ -n "$1" ]; do
  case "$1" in
    --web)
      WEB_ROOT="$2"
      shift 2
      ;;
    --out)
      OUTPUT_DIR="$2"
      shift 2
      ;;
    --db)
      TEST_DATABASE="$2"
      shift 2
      ;;
    --help)
      showHelp
      exit 1
      ;;
    *)
      DATABASE_FILES="$DATABASE_FILES $1"
      shift
      ;;
  esac
done

#####################################################################
## Validate options
echo "Web Dir: [$WEB_ROOT]"
echo "Output Dir: [$OUTPUT_DIR]"
echo "Database Name: [$TEST_DATABASE]"
echo ""

if [ ! -d "$WEB_ROOT" ]; then
  echo "Missing or invalid web dir"
  exit 2
fi
if [ ! -d "$OUTPUT_DIR" ]; then
  #echo "Missing or invalid output dir"
  #exit 2
  if [ -z "$OUTPUT_DIR" ]; then
    echo "Missing output dir"
    exit
  elif mkdir -p "$OUTPUT_DIR" ; then
    echo "Created output dir"
  else
    echo "Failed to make output dir"
    exit
  fi
fi
if [ -z "$TEST_DATABASE" ]; then
  echo "Missing or invalid database name"
  exit 2
fi
if [ -z "$DATABASE_FILES" ]; then
  echo "Missing list of database backup files (*.sql.bz2)"
  showHelp
  exit 2
fi

#####################################################################
## Run upgrades
if [ -n "$DRUPAL_SITE" ]; then
  DRUSH="drush -l $DRUPAL_SITE"
else
  DRUSH="drush"
fi

for SQLBZ2 in $DATABASE_FILES ; do
  echo "Test [$SQLBZ2]"
  NAME=$(basename $SQLBZ2)

  echo "drop database $TEST_DATABASE" | mysql
  echo "create database $TEST_DATABASE" | mysql
  bzcat "$SQLBZ2" | mysql "$TEST_DATABASE"
  pushd "$WEB_ROOT" > /dev/null
  $DRUSH civicrm-upgrade-db > "${OUTPUT_DIR}/${NAME}.out"
  popd > /dev/null
  echo
done
